// "Rock4.h" generated by "Obj2Header.exe" [Version 1.9d] Author: L.Norri Fullsail University.
// Data is converted to left-handed coordinate system and UV data is V flipped for Direct3D/Vulkan.
// The companion file "Rock4.h2b" is a binary dump of this format(-padding) for more flexibility.
// Loading *.h2b: read version, sizes, handle strings(max len 260) by reading until null-terminated.
/***********************/
/*  Generator version  */
/***********************/
#ifndef _Rock4_version_
const char Rock4_version[4] = { '0','1','9','d' };
#define _Rock4_version_
#endif
/************************************************/
/*  This section contains the model's size data */
/************************************************/
#ifndef _Rock4_vertexcount_
const unsigned Rock4_vertexcount = 105;
#define _Rock4_vertexcount_
#endif
#ifndef _Rock4_indexcount_
const unsigned Rock4_indexcount = 168;
#define _Rock4_indexcount_
#endif
#ifndef _Rock4_materialcount_
const unsigned Rock4_materialcount = 1; // can be used for batched draws
#define _Rock4_materialcount_
#endif
#ifndef _Rock4_meshcount_
const unsigned Rock4_meshcount = 1;
#define _Rock4_meshcount_
#endif
/************************************************/
/*  This section contains the raw data to load  */
/************************************************/
#ifndef __OBJ_VEC3__
typedef struct _OBJ_VEC3_
{
	float x,y,z; // 3D Coordinate.
}OBJ_VEC3;
#define __OBJ_VEC3__
#endif
#ifndef __OBJ_VERT__
typedef struct _OBJ_VERT_
{
	OBJ_VEC3 pos; // Left-handed +Z forward coordinate w not provided, assumed to be 1.
	OBJ_VEC3 uvw; // D3D/Vulkan style top left 0,0 coordinate.
	OBJ_VEC3 nrm; // Provided direct from obj file, may or may not be normalized.
}OBJ_VERT;
#define __OBJ_VERT__
#endif
#ifndef _Rock4_vertices_
// Raw Vertex Data follows: Positions, Texture Coordinates and Normals.
const OBJ_VERT Rock4_vertices[105] =
{
	{	{ -0.175294f, -0.014628f, -0.138239f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -1.000000f, 0.000000f }	},
	{	{ 0.006079f, -0.014628f, -0.138239f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -1.000000f, 0.000000f }	},
	{	{ 0.006079f, -0.014628f, 0.229879f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -1.000000f, 0.000000f }	},
	{	{ 0.006079f, 0.335341f, 0.214583f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.111500f, 0.257100f, 0.959900f }	},
	{	{ 0.006079f, 0.594030f, 0.145294f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.111500f, 0.257100f, 0.959900f }	},
	{	{ -0.101411f, 0.547424f, 0.145294f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.111500f, 0.257100f, 0.959900f }	},
	{	{ 0.006079f, 0.594030f, 0.145294f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.162100f, 0.971600f, 0.172600f }	},
	{	{ 0.006079f, 0.644389f, -0.138239f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.162100f, 0.971600f, 0.172600f }	},
	{	{ -0.083396f, 0.629461f, -0.138239f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.162100f, 0.971600f, 0.172600f }	},
	{	{ -0.175294f, 0.140475f, -0.138239f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.006079f, 0.173434f, -0.138239f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.006079f, -0.014628f, -0.138239f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.175294f, 0.657768f, 0.145294f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000000f, 0.000000f }	},
	{	{ 0.175294f, 0.391230f, 0.214583f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000000f, 0.000000f }	},
	{	{ 0.175294f, 0.504623f, -0.138240f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000000f, 0.000000f }	},
	{	{ -0.175294f, 0.079364f, 0.223840f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, -0.000000f, 0.000000f }	},
	{	{ -0.175294f, 0.140475f, -0.138239f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, -0.000000f, 0.000000f }	},
	{	{ -0.175294f, -0.014628f, -0.138239f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, -0.000000f, 0.000000f }	},
	{	{ -0.101411f, 0.547424f, 0.145294f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.926500f, 0.373100f, 0.049100f }	},
	{	{ -0.083396f, 0.629461f, -0.138239f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.926500f, 0.373100f, 0.049100f }	},
	{	{ -0.175294f, 0.401255f, -0.138239f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.926500f, 0.373100f, 0.049100f }	},
	{	{ 0.175294f, 0.158769f, 0.223840f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000000f, 0.000000f }	},
	{	{ 0.175294f, 0.218508f, -0.138240f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000000f, 0.000000f }	},
	{	{ -0.083396f, 0.629461f, -0.138239f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.006079f, 0.644389f, -0.138239f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.006079f, 0.444915f, -0.138239f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.006079f, 0.112903f, 0.223840f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.009400f, 0.041600f, 0.999100f }	},
	{	{ 0.006079f, 0.335341f, 0.214583f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.009400f, 0.041600f, 0.999100f }	},
	{	{ -0.175294f, 0.294473f, 0.214583f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.009400f, 0.041600f, 0.999100f }	},
	{	{ 0.175294f, 0.158769f, 0.223840f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.013100f, 0.039800f, 0.999100f }	},
	{	{ 0.175294f, 0.391230f, 0.214583f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.013100f, 0.039800f, 0.999100f }	},
	{	{ 0.006079f, 0.335341f, 0.214583f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.013100f, 0.039800f, 0.999100f }	},
	{	{ 0.175294f, -0.014628f, -0.138239f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000000f, 0.000000f }	},
	{	{ 0.175294f, -0.014628f, -0.229879f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000000f, 0.000000f }	},
	{	{ 0.175294f, 0.504623f, -0.138240f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.332700f, 0.943000f, 0.000000f }	},
	{	{ 0.175294f, 0.504623f, -0.229879f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.332700f, 0.943000f, 0.000000f }	},
	{	{ 0.006079f, 0.444915f, -0.229879f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.332700f, 0.943000f, 0.000000f }	},
	{	{ 0.175294f, 0.657768f, 0.145294f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.336400f, 0.893000f, 0.298900f }	},
	{	{ 0.175294f, 0.752669f, -0.138240f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.336400f, 0.893000f, 0.298900f }	},
	{	{ 0.006079f, 0.594030f, 0.145294f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.336400f, 0.893000f, 0.298900f }	},
	{	{ 0.175294f, 0.391230f, 0.214583f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.094300f, 0.250500f, 0.963500f }	},
	{	{ 0.175294f, 0.657768f, 0.145294f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.094300f, 0.250500f, 0.963500f }	},
	{	{ 0.006079f, 0.594030f, 0.145294f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.094300f, 0.250500f, 0.963500f }	},
	{	{ 0.175294f, -0.014628f, -0.138239f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -1.000000f, 0.000000f }	},
	{	{ 0.175294f, -0.014628f, 0.229879f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -1.000000f, 0.000000f }	},
	{	{ 0.175294f, 0.752669f, -0.138240f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.175294f, 0.504623f, -0.138240f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.175294f, 0.218508f, -0.229879f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000000f, 0.000000f }	},
	{	{ 0.006079f, -0.014628f, -0.229879f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -1.000000f, 0.000000f }	},
	{	{ 0.175294f, -0.014628f, 0.229879f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.009400f, 0.034800f, 0.999300f }	},
	{	{ 0.175294f, 0.158769f, 0.223840f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.009400f, 0.034800f, 0.999300f }	},
	{	{ 0.006079f, 0.112903f, 0.223840f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.009400f, 0.034800f, 0.999300f }	},
	{	{ 0.006079f, -0.014628f, 0.229879f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.008700f, 0.047300f, 0.998800f }	},
	{	{ 0.006079f, 0.112903f, 0.223840f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.008700f, 0.047300f, 0.998800f }	},
	{	{ -0.175294f, 0.079364f, 0.223840f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.008700f, 0.047300f, 0.998800f }	},
	{	{ 0.175294f, -0.014628f, 0.229879f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000000f, 0.000000f }	},
	{	{ -0.175294f, 0.294473f, 0.214583f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, -0.000000f, 0.000000f }	},
	{	{ -0.175294f, 0.401255f, -0.138239f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, -0.000000f, 0.000000f }	},
	{	{ -0.175294f, 0.401255f, -0.138239f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.006079f, 0.173434f, -0.138239f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, -0.000000f, 0.000000f }	},
	{	{ 0.006079f, 0.444915f, -0.138239f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, -0.000000f, 0.000000f }	},
	{	{ 0.006079f, 0.444915f, -0.229879f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, -0.000000f, 0.000000f }	},
	{	{ 0.006079f, -0.014628f, -0.138239f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, -0.000000f, 0.000000f }	},
	{	{ 0.006079f, 0.173434f, -0.229879f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, -0.000000f, 0.000000f }	},
	{	{ 0.006079f, 0.173434f, -0.229879f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.175294f, 0.218508f, -0.229879f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.175294f, -0.014628f, -0.229879f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.006079f, 0.444915f, -0.229879f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.175294f, 0.504623f, -0.229879f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.175294f, 0.752669f, -0.138240f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.533100f, 0.833000f, 0.148000f }	},
	{	{ 0.006079f, 0.644389f, -0.138239f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.533100f, 0.833000f, 0.148000f }	},
	{	{ 0.006079f, 0.594030f, 0.145294f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.533100f, 0.833000f, 0.148000f }	},
	{	{ -0.175294f, -0.014628f, 0.229879f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -1.000000f, 0.000000f }	},
	{	{ 0.006079f, 0.335341f, 0.214583f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.063300f, 0.280800f, 0.957700f }	},
	{	{ -0.101411f, 0.547424f, 0.145294f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.063300f, 0.280800f, 0.957700f }	},
	{	{ -0.175294f, 0.294473f, 0.214583f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.063300f, 0.280800f, 0.957700f }	},
	{	{ 0.006079f, 0.594030f, 0.145294f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.386800f, 0.892100f, 0.233500f }	},
	{	{ -0.083396f, 0.629461f, -0.138239f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.386800f, 0.892100f, 0.233500f }	},
	{	{ -0.101411f, 0.547424f, 0.145294f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.386800f, 0.892100f, 0.233500f }	},
	{	{ -0.175294f, -0.014628f, -0.138239f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.175294f, 0.752669f, -0.138240f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000000f, 0.000000f }	},
	{	{ -0.175294f, -0.014628f, 0.229879f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, -0.000000f, 0.000000f }	},
	{	{ -0.101411f, 0.547424f, 0.145294f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.948800f, 0.302200f, 0.091500f }	},
	{	{ -0.175294f, 0.401255f, -0.138239f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.948800f, 0.302200f, 0.091500f }	},
	{	{ -0.175294f, 0.294473f, 0.214583f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.948800f, 0.302200f, 0.091500f }	},
	{	{ 0.006079f, 0.112903f, 0.223840f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.007900f, 0.043000f, 0.999000f }	},
	{	{ -0.175294f, 0.294473f, 0.214583f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.007900f, 0.043000f, 0.999000f }	},
	{	{ -0.175294f, 0.079364f, 0.223840f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.007900f, 0.043000f, 0.999000f }	},
	{	{ 0.175294f, 0.158769f, 0.223840f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.011300f, 0.041600f, 0.999100f }	},
	{	{ 0.006079f, 0.335341f, 0.214583f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.011300f, 0.041600f, 0.999100f }	},
	{	{ 0.006079f, 0.112903f, 0.223840f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.011300f, 0.041600f, 0.999100f }	},
	{	{ 0.006079f, 0.444915f, -0.138239f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.332700f, 0.943000f, 0.000000f }	},
	{	{ 0.175294f, 0.391230f, 0.214583f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.085100f, 0.257800f, 0.962400f }	},
	{	{ 0.006079f, 0.594030f, 0.145294f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.085100f, 0.257800f, 0.962400f }	},
	{	{ 0.006079f, 0.335341f, 0.214583f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.085100f, 0.257800f, 0.962400f }	},
	{	{ 0.175294f, 0.504623f, -0.229879f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000000f, 0.000000f }	},
	{	{ 0.175294f, -0.014628f, -0.229879f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -1.000000f, 0.000000f }	},
	{	{ 0.175294f, -0.014628f, 0.229879f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, 0.047300f, 0.998900f }	},
	{	{ 0.006079f, 0.112903f, 0.223840f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, 0.047300f, 0.998900f }	},
	{	{ 0.006079f, -0.014628f, 0.229879f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, 0.047300f, 0.998900f }	},
	{	{ 0.006079f, -0.014628f, 0.229879f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, 0.064100f, 0.997900f }	},
	{	{ -0.175294f, 0.079364f, 0.223840f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, 0.064100f, 0.997900f }	},
	{	{ -0.175294f, -0.014628f, 0.229879f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, 0.064100f, 0.997900f }	},
	{	{ 0.006079f, -0.014628f, -0.229879f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, -0.000000f, 0.000000f }	},
	{	{ 0.006079f, -0.014628f, -0.229879f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
};
#define _Rock4_vertices_
#endif
#ifndef _Rock4_indices_
// Index Data follows: Sequential by mesh, Every Three Indices == One Triangle.
const unsigned int Rock4_indices[168] =
{
	 0, 1, 2,
	 3, 4, 5,
	 6, 7, 8,
	 9, 10, 11,
	 12, 13, 14,
	 15, 16, 17,
	 18, 19, 20,
	 13, 21, 22,
	 23, 24, 25,
	 26, 27, 28,
	 29, 30, 31,
	 22, 32, 33,
	 34, 35, 36,
	 37, 38, 39,
	 40, 41, 42,
	 1, 43, 44,
	 24, 45, 46,
	 14, 22, 47,
	 43, 1, 48,
	 49, 50, 51,
	 52, 53, 54,
	 21, 55, 32,
	 56, 57, 16,
	 58, 25, 10,
	 59, 60, 61,
	 62, 59, 63,
	 64, 65, 66,
	 67, 68, 65,
	 69, 70, 71,
	 0, 2, 72,
	 73, 74, 75,
	 76, 77, 78,
	 9, 11, 79,
	 12, 14, 80,
	 15, 17, 81,
	 82, 83, 84,
	 13, 22, 14,
	 23, 25, 58,
	 85, 86, 87,
	 88, 89, 90,
	 22, 33, 47,
	 34, 36, 91,
	 92, 93, 94,
	 1, 44, 2,
	 24, 46, 25,
	 14, 47, 95,
	 43, 48, 96,
	 97, 98, 99,
	 100, 101, 102,
	 21, 32, 22,
	 56, 16, 15,
	 58, 10, 9,
	 59, 61, 63,
	 62, 63, 103,
	 64, 66, 104,
	 67, 65, 64,
};
#define _Rock4_indices_
#endif
// Part of an OBJ_MATERIAL, the struct is 16 byte aligned so it is GPU register friendly.
#ifndef __OBJ_ATTRIBUTES__
typedef struct _OBJ_ATTRIBUTES_
{
	OBJ_VEC3    Kd; // diffuse reflectivity
	float	    d; // dissolve (transparency) 
	OBJ_VEC3    Ks; // specular reflectivity
	float       Ns; // specular exponent
	OBJ_VEC3    Ka; // ambient reflectivity
	float       sharpness; // local reflection map sharpness
	OBJ_VEC3    Tf; // transmission filter
	float       Ni; // optical density (index of refraction)
	OBJ_VEC3    Ke; // emissive reflectivity
	unsigned    illum; // illumination model
}OBJ_ATTRIBUTES;
#define __OBJ_ATTRIBUTES__
#endif
// This structure also has been made GPU register friendly so it can be transfered directly if desired.
// Note: Total struct size will vary depenedening on CPU processor architecture (string pointers).
#ifndef __OBJ_MATERIAL__
typedef struct _OBJ_MATERIAL_
{
	// The following items are typically used in a pixel/fragment shader, they are packed for GPU registers.
	OBJ_ATTRIBUTES attrib; // Surface shading characteristics & illumination model
	// All items below this line are not needed on the GPU and are generally only used during load time.
	const char* name; // the name of this material
	// If the model's materials contain any specific texture data it will be located below.
	const char* map_Kd; // diffuse texture
	const char* map_Ks; // specular texture
	const char* map_Ka; // ambient texture
	const char* map_Ke; // emissive texture
	const char* map_Ns; // specular exponent texture
	const char* map_d; // transparency texture
	const char* disp; // roughness map (displacement)
	const char* decal; // decal texture (lerps texture & material colors)
	const char* bump; // normal/bumpmap texture
	void* padding[2]; // 16 byte alignment on 32bit or 64bit
}OBJ_MATERIAL;
#define __OBJ_MATERIAL__
#endif
#ifndef _Rock4_materials_
// Material Data follows: pulled from a .mtl file of the same name if present.
const OBJ_MATERIAL Rock4_materials[1] =
{
	{
		{{ 0.280442f, 0.238347f, 0.224087f },
		1.000000f,
		{ 0.500000f, 0.500000f, 0.500000f },
		96.078453f,
		{ 1.000000f, 1.000000f, 1.000000f },
		60.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		1.000000f,
		{ 0.000000f, 0.000000f, 0.000000f },
		2},
		"Grey.003",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
	},
};
#define _Rock4_materials_
#endif
/************************************************/
/*  This section contains the model's structure */
/************************************************/
#ifndef _Rock4_batches_
// Use this conveinence array to batch render all geometry by like material.
// Each entry corresponds to the same entry in the materials array above.
// The two numbers provided are the IndexCount and the IndexOffset into the indices array.
// If you need more fine grained control(ex: for transformations) use the OBJ_MESH data below.
const unsigned int Rock4_batches[1][2] =
{
	{ 168, 0 },
};
#define _Rock4_batches_
#endif
#ifndef __OBJ_MESH__
typedef struct _OBJ_MESH_
{
	const char* name;
	unsigned    indexCount;
	unsigned    indexOffset;
	unsigned    materialIndex;
}OBJ_MESH;
#define __OBJ_MESH__
#endif
#ifndef _Rock4_meshes_
// Mesh Data follows: Meshes are .obj groups sorted & split by material.
// Meshes are provided in sequential order, sorted by material first and name second.
const OBJ_MESH Rock4_meshes[1] =
{
	{
		"Rock4.009_Grey.003",
		168,
		0,
		0,
	},
};
#define _Rock4_meshes_
#endif
